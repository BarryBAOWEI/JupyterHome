library(rugarch)
data<-read.table('C:/Users/jxjsj/Desktop/JupyterHome/Data/SZZS_lnr_rv_w_m_080101-181101.csv',header=TRUE,sep=',')
View(data)
spec = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = data['M','Tu','W','Th',"F","Sa",'Su']),
distribution.model = "norm")
data['M','Tu','W','Th',"F","Sa",'Su']
data[['M','Tu','W','Th',"F","Sa",'Su']]
data[c('M','Tu','W','Th',"F","Sa",'Su')]
spec = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = data[c('M','Tu','W','Th',"F","Sa",'Su')]),
distribution.model = "norm")
sgarch_test = ugarchfit(data=data['lnR'], spec = spec,
solver = "solnp", realizedVol = data['szzsRV'])
require(xts)
sgarch_test = ugarchfit(data=data['lnR'], spec = spec,
solver = "solnp", realizedVol = data['szzsRV'])
data(spyreal)
View(spyreal)
require(xts)
library(xts)
sample.xts <- as.xts(data, descr='my new xts object')
sample.xts <- as.xts(data, descr='my new xts object', match.to='X')
sample.xts <- as.xts(data, descr='my new xts object', match.to=data['X'])
sample <- xts(x = data, order.by = data['X'])
data<-read.zoo('C:/Users/jxjsj/Desktop/JupyterHome/Data/SZZS_lnr_rv_w_m_080101-181101.csv',header=TRUE,sep=',',index.column = 0, format = "%Y%m%d")
data<-read.zoo('C:/Users/jxjsj/Desktop/JupyterHome/Data/SZZS_lnr_rv_w_m_080101-181101.csv',header=TRUE,sep=',',index.column = 1, format = "%Y%m%d")
data<-read.zoo('C:/Users/jxjsj/Desktop/JupyterHome/Data/SZZS_lnr_rv_w_m_080101-181101.csv',sep=',',index.column = 0, format = "%Y%m%d")
data<-read.zoo('C:/Users/jxjsj/Desktop/JupyterHome/Data/SZZS_lnr_rv_w_m_080101-181101.csv',header=TRUE,sep=',')
sample <- xts(x = data)
View(sample)
spec = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[c('M','Tu','W','Th',"F","Sa",'Su')]),
distribution.model = "norm")
View(sample)
sample['lnR']
sample['lnR']
sample
sample[,1]
sample[,c(16,17,18,19,20)]
sample[c(1,2,3,4,5),c(16,17,18,19,20)]
spec = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(16,17,18,19,20)]),
distribution.model = "norm")
sgarch_test = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test
spec = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(16,17,19,20)]),
distribution.model = "norm")
sgarch_test = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test
plot(sgarch_test)
8
3
plot(sgarch_test)
plot(sgarch_test)
sample[,c(4:15)]
# 周内效应-ged
spec2 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(16,17,19,20)]),
distribution.model = "ged")
sgarch_test2 = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test2
# 周内效应-ged
spec2 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(16,17,19,20)]),
distribution.model = 'ged')
sgarch_test2 = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test2
View(sgarch_test2)
# 周内效应-ged
spec2 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(16,17,19,20)]),
distribution.model = "std")
sgarch_test2 = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test2
# 周四效应-norm
spec2 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "std")
sgarch_test2 = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test2
# 周四效应-norm
spec3 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "std")
sgarch_test2 = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
# 周四效应-norm
spec3 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "std")
sgarch_test3 = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test3
View(spec3)
sample[,c(19)]
sample[,]
sample[,19]
matrix([,19])
matrix(sample[,19])
matrix(sample[,20])
library(rugarch)
library(xts)
data<-read.zoo('C:/Users/jxjsj/Desktop/JupyterHome/Data/SZZS_lnr_rv_w_m_080101-181101.csv',header=TRUE,sep=',')
sample <- xts(x = data)
# 周四效应-norm
spec3 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "norm")
sgarch_test3 = ugarchfit(data=sample[,1], spec = spec,
solver = "hybrid", realizedVol = sample[,3])
# 周四效应-norm
spec3 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "norm")
sgarch_test3 = ugarchfit(data=sample[,1], spec = spec3,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test3
plot(sgarch_test3)
# 周内效应-ged
spec2 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(16,17,19,20)]),
distribution.model = "ged")
sgarch_test2 = ugarchfit(data=sample[,1], spec = spec2,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test2
plot(sgarch_test2)
# 周内效应-std
spec4 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(16,17,19,20)]),
distribution.model = "std")
sgarch_test4 = ugarchfit(data=sample[,1], spec = spec4,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test4
View(sample)
#### 周四效应-ged
spec5 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "ged")
sgarch_test5 = ugarchfit(data=sample[,1], spec = spec5,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test5
#### 周四效应-std
spec6 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "ged")
sgarch_test6 = ugarchfit(data=sample[,1], spec = spec6,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test6
plot(sgarch_test6)
#### 周四效应-std
spec6 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1), external.regressors = sample[,c(19)]),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "ged")
sgarch_test6 = ugarchfit(data=sample[,1], spec = spec6,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test6
plot(sgarch_test6)
View(sgarch_test6)
#### 周四效应-std
spec6 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1), external.regressors = sample[,c(19)]),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "std")
sgarch_test6 = ugarchfit(data=sample[,1], spec = spec6,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test6
#### 周内效应-norm
spec1 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(16,17,19,20)]),
distribution.model = "norm")
sgarch_test1 = ugarchfit(data=sample[,1], spec = spec1,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test1
library(rugarch)
library(xts)
data<-read.zoo('C:/Users/jxjsj/Desktop/JupyterHome/Data/SZZS_lnr_rv_w_m_080101-181101.csv',header=TRUE,sep=',')
sample <- xts(x = data)
View(sample)
#######################################################
sample[,c(4:15)]
### 月内效应总体检验
spec7 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1), external.regressors = sample[,c(4:15)]),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(19)]),
distribution.model = "std")
sgarch_test7 = ugarchfit(data=sample[,1], spec = spec7,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test7
#### 月内效应-ged
spec8 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(4:15)]),
distribution.model = "ged")
sgarch_test8 = ugarchfit(data=sample[,1], spec = spec8,
solver = "hybrid", realizedVol = sample[,3])
#######################################################
sample[,c(4:8,10:15)]
#### 月内效应-norm
spec7 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(4:8,10:15)]),
distribution.model = "norm")
sgarch_test7 = ugarchfit(data=sample[,1], spec = spec7,
solver = "hybrid", realizedVol = sample[,3])
_
sgarchtest7
sgarch_test7
#### 二六七十效应-norm
spec10 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(5,9,10,13)]),
distribution.model = "norm")
sgarch_test10 = ugarchfit(data=sample[,1], spec = spec10,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test10
#### 二六效应-norm
spec10 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(5,9)]),
distribution.model = "norm")
sgarch_test10 = ugarchfit(data=sample[,1], spec = spec10,
solver = "hybrid", realizedVol = sample[,3])
#### 二六效应-norm
spec11 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(5,9)]),
distribution.model = "norm")
sgarch_test11 = ugarchfit(data=sample[,1], spec = spec11,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test11
plot(sgarch_test11)
#### 二六效应-ged
spec12 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(5,9)]),
distribution.model = "ged")
sgarch_test12 = ugarchfit(data=sample[,1], spec = spec12,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test12
plot(sgarch_test12)
#### 二六效应-std
spec13 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(5,9)]),
distribution.model = "std")
sgarch_test13 = ugarchfit(data=sample[,1], spec = spec13,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test13
plot(sgarch_test13)
library(rugarch)
library(xts)
data<-read.zoo('C:/Users/jxjsj/Desktop/JupyterHome/Data/SZZS_lnr_rv_w_m_ntd_080101-181101.csv',header=TRUE,sep=',')
sample <- xts(x = data)
View(sample)
View(sample)
#######################################################
sample[,c(22)]
#######################################################
sample[,c(21)]
#######################################################
sample[,c(23)]
#### 假日效应-norm
spec14 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE, external.regressors = sample[,c(23)]),
distribution.model = "norm")
sgarch_test14 = ugarchfit(data=sample[,1], spec = spec14,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test14
#### 假日效应-norm-置于波动率方程
spec15 = ugarchspec(
variance.model = list(model = "realGARCH", garchOrder = c(1,1), external.regressors = sample[,c(23)]),
mean.model = list(armaOrder = c(0,0), include.mean = TRUE),
distribution.model = "norm")
sgarch_test15 = ugarchfit(data=sample[,1], spec = spec15,
solver = "hybrid", realizedVol = sample[,3])
sgarch_test15
plot(sgarch_test15)
plot(sgarch_test15)
library(FinTS)
install.packages("FinTS")
install.packages('devtools')
library(devtools)
install_github("cran/FinTS")
library(FinTS)
#######################################################
ArchTest(sqmple[,1],lag=12)
#######################################################
ArchTest(sample[,1],lag=12)
#######################################################
ArchTest(sample[,2],lag=12)
#######################################################
ArchTest(sample[,1],lag=12)
Box.test((sample[,1]-mean(sample[,1]))^2,lag=12, type='Ljung')
Box.test((sample[,1]-mean(sample[,1])),lag=12, type='Ljung')
Box.test((sample[,1]-mean(sample[,1])),lag=8, type='Ljung')
Box.test((sample[,1]-mean(sample[,1])),lag=6, type='Ljung')
Box.test(sample[,1],lag=6, type='Ljung')
# Ljung-Box检验，原假设序列的前n各自相关函数联合为0
Box.test((sample[,1]-mean(sample[,1]))^2,lag=12, type='Ljung')
# Ljung-Box检验，原假设序列的前n各自相关函数联合为0
Box.test((sample[,1])^2,lag=12, type='Ljung')
Box.test(sample[,1],lag=4, type='Ljung')
Box.test(sample[,1],lag=3, type='Ljung')
#
garch_at15 = sgarch_test15@fit[["residuals"]]
garch_sigma15 = sgarch_test15@fit[["sigma"]]
stdd.residuals15 = garch_at15/garch_sigma15
ArchTest(stdd.residuals15,lag=12)
Box.test(stdd.residuals15,lag=12, type='Ljung')
Box.test(stdd.residuals15^2,lag=12, type='Ljung')
summary(garch_at15)
summary(sgarch_test15)
